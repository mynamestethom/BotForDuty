package com.example.BotForDuty.service;
import com.example.BotForDuty.model.UserRepository;
import com.example.BotForDuty.pojo.Person;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.objects.Message;

import java.util.HashMap;
import java.util.Map;
import java.util.Optional;

@Service
public class RegisterUserService{

    @Autowired
    private UserRepository userRepository;
    private Map<Long, RegistrationState> UserState = new HashMap<>();


    private enum RegistrationState{
        AWAITING_ROOM_NUMBER
    }

    public boolean isUserRegistrationProcess(long chatId){
        return UserState.containsKey(chatId);
    }
    public String ProcessRoomNumber(Message msg){
        long chatId = msg.getChatId();
        String [] parts = msg.getText().trim().split(" ");

        if (parts.length != 2) {
            return "‚ùå –û—à–∏–±–∫–∞! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ –Ω–æ–º–µ—Ä –∫–æ–º–Ω–∞—Ç—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.\n–ü—Ä–∏–º–µ—Ä: <code>–ò–≤–∞–Ω 305</code>";
        }

        try {
            int roomNum = Integer.parseInt(parts[1]);

            boolean isValidRoom = (roomNum >= 302 && roomNum <= 310) ||
                    (roomNum >= 312 && roomNum <= 320);

            if (!isValidRoom) {
                return "‚ùå –û—à–∏–±–∫–∞! –î–æ–ø—É—Å—Ç–∏–º—ã–µ –Ω–æ–º–µ—Ä–∞ –∫–æ–º–Ω–∞—Ç: 302-310 –∏ 312-320\n" +
                        "–ö–æ–º–Ω–∞—Ç–∞ 311 –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏";
            }

            String name = parts[0];
            UserState.remove(chatId);
            return registerUser(chatId, roomNum, name);
        } catch (NumberFormatException e) {
            return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –∫–æ–º–Ω–∞—Ç—ã! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—ã.\n–ü—Ä–∏–º–µ—Ä: <code>305</code>";
        }
    }

    public String RegisterUser(Message msg){
        long chatId = msg.getChatId();
        if (userRepository.findById(chatId).isEmpty()){
            Person person = new Person();
            UserState.put(chatId, RegistrationState.AWAITING_ROOM_NUMBER);
            return "‚ú® <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b> ‚ú®\n\n" +
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ <b>–ò–º—è</b> –∏ <b>–ù–æ–º–µ—Ä –∫–æ–º–Ω–∞—Ç—ã</b> —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.\n" +
                    "–ü—Ä–∏–º–µ—Ä: <code>–ê–Ω–Ω–∞ 307</code>";
        }else{
            return "‚ÑπÔ∏è –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ!";
        }
    }

    public String registerUser(long chatId, int number_room, String name){
        Person person = new Person();
        person.setName(name);
        person.setChatId(chatId);
        person.setNumber_room(number_room);
        userRepository.save(person);
        return "‚úÖ <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>\n\n" +
                "üë§ <b>–ò–º—è:</b> " + name + "\n" +
                "üè† <b>–ö–æ–º–Ω–∞—Ç–∞:</b> " + number_room + "\n\n" +
                "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞!";
    }

    public String getInformForUser(long chatId){
        if(userRepository.findById(chatId).isEmpty()){
            return "üî¥ <b>–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!</b>\n\n" +
                    "–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /register";
        }

        Optional<Person> userOptional = userRepository.findById(chatId);
        Person person = userOptional.get();
        String name = person.getName();
        int roomNumber = person.getNumber_room();

        String result = "üìã <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n" +
                "üë§ <b>–ò–º—è:</b> " + name + "\n" +
                "üè† <b>–ö–æ–º–Ω–∞—Ç–∞:</b> " + roomNumber + "\n\n" +
                "–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.";
        return result;
    }
}


